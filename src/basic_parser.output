Useless nonterminals

   FUNCTION_DECLERATION


Terminals which are not used

   T_VOID
   T_RETURN
   T_BWAND
   T_BWOR
   t_BWNOT


Useless rules

   27 FUNCTION_DECLERATION: T_VOID T_VARIABLE '(' ')' '{' STUFF0 '}'
   28                     | T_INT T_VARIABLE '(' ')' '{' STUFF0 '}'


Rules never reduced

    4 VARIABLE_TYPE: T_INT


State 4 conflicts: 1 shift/reduce


Grammar

    0 $accept: ROOT_NODE $end

    1 ROOT_NODE: STUFF0

    2 VARIABLE_DECLERATION: VARIABLE_TYPE T_VARIABLE
    3                     | VARIABLE_TYPE T_VARIABLE ASSIGNMENT_OPERATOR

    4 VARIABLE_TYPE: T_INT

    5 ASSIGNMENT_OPERATOR: T_INT T_VARIABLE '=' FACTOR

    6 NUMERICAL_EXPR: TERM
    7               | NUMERICAL_EXPR T_PLUS TERM
    8               | NUMERICAL_EXPR T_MINUS TERM

    9 TERM: FACTOR
   10     | TERM T_STAR FACTOR
   11     | TERM T_DIVIDE FACTOR

   12 FACTOR: T_NUMBER
   13       | '(' NUMERICAL_EXPR ')'

   14 SELECTION: T_IF '(' STATEMENT ')' '{' STUFF0 '}'
   15          | T_IF '(' STATEMENT ')' '{' STUFF0 '}' T_ELSE '{' STUFF0 '}'

   16 ITTERATION: T_WHILE '(' STATEMENT ')' '{' STUFF0 '}'

   17 STATEMENT: STATEMENT_SIDE T_EQ STATEMENT_SIDE
   18          | STATEMENT_SIDE T_NEQ STATEMENT_SIDE

   19 STATEMENT_SIDE: T_INT
   20               | NUMERICAL_EXPR

   21 FUNCTION_CALL: T_VARIABLE '(' ')'

   22 STUFF0: VARIABLE_DECLERATION
   23       | ASSIGNMENT_OPERATOR
   24       | SELECTION
   25       | ITTERATION
   26       | FUNCTION_CALL


Terminals, with rules where they appear

$end (0) 0
'(' (40) 13 14 15 16 21
')' (41) 13 14 15 16 21
'=' (61) 5
'{' (123) 14 15 16
'}' (125) 14 15 16
error (256)
T_VARIABLE (258) 2 3 5 21
T_NUMBER (259) 12
T_WHILE (260) 16
T_IF (261) 14 15
T_ELSE (262) 15
T_INT (263) 4 5 19
T_VOID (264)
T_RETURN (265)
T_STAR (266) 10
T_DIVIDE (267) 11
T_PLUS (268) 7
T_MINUS (269) 8
T_EQ (270) 17
T_NEQ (271) 18
T_BWAND (272)
T_BWOR (273)
t_BWNOT (274)


Nonterminals, with rules where they appear

$accept (25)
    on left: 0
ROOT_NODE (26)
    on left: 1, on right: 0
VARIABLE_DECLERATION (27)
    on left: 2 3, on right: 22
VARIABLE_TYPE (28)
    on left: 4, on right: 2 3
ASSIGNMENT_OPERATOR (29)
    on left: 5, on right: 3 23
NUMERICAL_EXPR (30)
    on left: 6 7 8, on right: 7 8 13 20
TERM (31)
    on left: 9 10 11, on right: 6 7 8 10 11
FACTOR (32)
    on left: 12 13, on right: 5 9 10 11
SELECTION (33)
    on left: 14 15, on right: 24
ITTERATION (34)
    on left: 16, on right: 25
STATEMENT (35)
    on left: 17 18, on right: 14 15 16
STATEMENT_SIDE (36)
    on left: 19 20, on right: 17 18
FUNCTION_CALL (37)
    on left: 21, on right: 26
STUFF0 (38)
    on left: 22 23 24 25 26, on right: 1 14 15 16


state 0

    0 $accept: . ROOT_NODE $end

    T_VARIABLE  shift, and go to state 1
    T_WHILE     shift, and go to state 2
    T_IF        shift, and go to state 3
    T_INT       shift, and go to state 4

    ROOT_NODE             go to state 5
    VARIABLE_DECLERATION  go to state 6
    VARIABLE_TYPE         go to state 7
    ASSIGNMENT_OPERATOR   go to state 8
    SELECTION             go to state 9
    ITTERATION            go to state 10
    FUNCTION_CALL         go to state 11
    STUFF0                go to state 12


state 1

   21 FUNCTION_CALL: T_VARIABLE . '(' ')'

    '('  shift, and go to state 13


state 2

   16 ITTERATION: T_WHILE . '(' STATEMENT ')' '{' STUFF0 '}'

    '('  shift, and go to state 14


state 3

   14 SELECTION: T_IF . '(' STATEMENT ')' '{' STUFF0 '}'
   15          | T_IF . '(' STATEMENT ')' '{' STUFF0 '}' T_ELSE '{' STUFF0 '}'

    '('  shift, and go to state 15


state 4

    4 VARIABLE_TYPE: T_INT .
    5 ASSIGNMENT_OPERATOR: T_INT . T_VARIABLE '=' FACTOR

    T_VARIABLE  shift, and go to state 16

    T_VARIABLE  [reduce using rule 4 (VARIABLE_TYPE)]


state 5

    0 $accept: ROOT_NODE . $end

    $end  shift, and go to state 17


state 6

   22 STUFF0: VARIABLE_DECLERATION .

    $default  reduce using rule 22 (STUFF0)


state 7

    2 VARIABLE_DECLERATION: VARIABLE_TYPE . T_VARIABLE
    3                     | VARIABLE_TYPE . T_VARIABLE ASSIGNMENT_OPERATOR

    T_VARIABLE  shift, and go to state 18


state 8

   23 STUFF0: ASSIGNMENT_OPERATOR .

    $default  reduce using rule 23 (STUFF0)


state 9

   24 STUFF0: SELECTION .

    $default  reduce using rule 24 (STUFF0)


state 10

   25 STUFF0: ITTERATION .

    $default  reduce using rule 25 (STUFF0)


state 11

   26 STUFF0: FUNCTION_CALL .

    $default  reduce using rule 26 (STUFF0)


state 12

    1 ROOT_NODE: STUFF0 .

    $default  reduce using rule 1 (ROOT_NODE)


state 13

   21 FUNCTION_CALL: T_VARIABLE '(' . ')'

    ')'  shift, and go to state 19


state 14

   16 ITTERATION: T_WHILE '(' . STATEMENT ')' '{' STUFF0 '}'

    T_NUMBER  shift, and go to state 20
    T_INT     shift, and go to state 21
    '('       shift, and go to state 22

    NUMERICAL_EXPR  go to state 23
    TERM            go to state 24
    FACTOR          go to state 25
    STATEMENT       go to state 26
    STATEMENT_SIDE  go to state 27


state 15

   14 SELECTION: T_IF '(' . STATEMENT ')' '{' STUFF0 '}'
   15          | T_IF '(' . STATEMENT ')' '{' STUFF0 '}' T_ELSE '{' STUFF0 '}'

    T_NUMBER  shift, and go to state 20
    T_INT     shift, and go to state 21
    '('       shift, and go to state 22

    NUMERICAL_EXPR  go to state 23
    TERM            go to state 24
    FACTOR          go to state 25
    STATEMENT       go to state 28
    STATEMENT_SIDE  go to state 27


state 16

    5 ASSIGNMENT_OPERATOR: T_INT T_VARIABLE . '=' FACTOR

    '='  shift, and go to state 29


state 17

    0 $accept: ROOT_NODE $end .

    $default  accept


state 18

    2 VARIABLE_DECLERATION: VARIABLE_TYPE T_VARIABLE .
    3                     | VARIABLE_TYPE T_VARIABLE . ASSIGNMENT_OPERATOR

    T_INT  shift, and go to state 30

    $default  reduce using rule 2 (VARIABLE_DECLERATION)

    ASSIGNMENT_OPERATOR  go to state 31


state 19

   21 FUNCTION_CALL: T_VARIABLE '(' ')' .

    $default  reduce using rule 21 (FUNCTION_CALL)


state 20

   12 FACTOR: T_NUMBER .

    $default  reduce using rule 12 (FACTOR)


state 21

   19 STATEMENT_SIDE: T_INT .

    $default  reduce using rule 19 (STATEMENT_SIDE)


state 22

   13 FACTOR: '(' . NUMERICAL_EXPR ')'

    T_NUMBER  shift, and go to state 20
    '('       shift, and go to state 22

    NUMERICAL_EXPR  go to state 32
    TERM            go to state 24
    FACTOR          go to state 25


state 23

    7 NUMERICAL_EXPR: NUMERICAL_EXPR . T_PLUS TERM
    8               | NUMERICAL_EXPR . T_MINUS TERM
   20 STATEMENT_SIDE: NUMERICAL_EXPR .

    T_PLUS   shift, and go to state 33
    T_MINUS  shift, and go to state 34

    $default  reduce using rule 20 (STATEMENT_SIDE)


state 24

    6 NUMERICAL_EXPR: TERM .
   10 TERM: TERM . T_STAR FACTOR
   11     | TERM . T_DIVIDE FACTOR

    T_STAR    shift, and go to state 35
    T_DIVIDE  shift, and go to state 36

    $default  reduce using rule 6 (NUMERICAL_EXPR)


state 25

    9 TERM: FACTOR .

    $default  reduce using rule 9 (TERM)


state 26

   16 ITTERATION: T_WHILE '(' STATEMENT . ')' '{' STUFF0 '}'

    ')'  shift, and go to state 37


state 27

   17 STATEMENT: STATEMENT_SIDE . T_EQ STATEMENT_SIDE
   18          | STATEMENT_SIDE . T_NEQ STATEMENT_SIDE

    T_EQ   shift, and go to state 38
    T_NEQ  shift, and go to state 39


state 28

   14 SELECTION: T_IF '(' STATEMENT . ')' '{' STUFF0 '}'
   15          | T_IF '(' STATEMENT . ')' '{' STUFF0 '}' T_ELSE '{' STUFF0 '}'

    ')'  shift, and go to state 40


state 29

    5 ASSIGNMENT_OPERATOR: T_INT T_VARIABLE '=' . FACTOR

    T_NUMBER  shift, and go to state 20
    '('       shift, and go to state 22

    FACTOR  go to state 41


state 30

    5 ASSIGNMENT_OPERATOR: T_INT . T_VARIABLE '=' FACTOR

    T_VARIABLE  shift, and go to state 16


state 31

    3 VARIABLE_DECLERATION: VARIABLE_TYPE T_VARIABLE ASSIGNMENT_OPERATOR .

    $default  reduce using rule 3 (VARIABLE_DECLERATION)


state 32

    7 NUMERICAL_EXPR: NUMERICAL_EXPR . T_PLUS TERM
    8               | NUMERICAL_EXPR . T_MINUS TERM
   13 FACTOR: '(' NUMERICAL_EXPR . ')'

    T_PLUS   shift, and go to state 33
    T_MINUS  shift, and go to state 34
    ')'      shift, and go to state 42


state 33

    7 NUMERICAL_EXPR: NUMERICAL_EXPR T_PLUS . TERM

    T_NUMBER  shift, and go to state 20
    '('       shift, and go to state 22

    TERM    go to state 43
    FACTOR  go to state 25


state 34

    8 NUMERICAL_EXPR: NUMERICAL_EXPR T_MINUS . TERM

    T_NUMBER  shift, and go to state 20
    '('       shift, and go to state 22

    TERM    go to state 44
    FACTOR  go to state 25


state 35

   10 TERM: TERM T_STAR . FACTOR

    T_NUMBER  shift, and go to state 20
    '('       shift, and go to state 22

    FACTOR  go to state 45


state 36

   11 TERM: TERM T_DIVIDE . FACTOR

    T_NUMBER  shift, and go to state 20
    '('       shift, and go to state 22

    FACTOR  go to state 46


state 37

   16 ITTERATION: T_WHILE '(' STATEMENT ')' . '{' STUFF0 '}'

    '{'  shift, and go to state 47


state 38

   17 STATEMENT: STATEMENT_SIDE T_EQ . STATEMENT_SIDE

    T_NUMBER  shift, and go to state 20
    T_INT     shift, and go to state 21
    '('       shift, and go to state 22

    NUMERICAL_EXPR  go to state 23
    TERM            go to state 24
    FACTOR          go to state 25
    STATEMENT_SIDE  go to state 48


state 39

   18 STATEMENT: STATEMENT_SIDE T_NEQ . STATEMENT_SIDE

    T_NUMBER  shift, and go to state 20
    T_INT     shift, and go to state 21
    '('       shift, and go to state 22

    NUMERICAL_EXPR  go to state 23
    TERM            go to state 24
    FACTOR          go to state 25
    STATEMENT_SIDE  go to state 49


state 40

   14 SELECTION: T_IF '(' STATEMENT ')' . '{' STUFF0 '}'
   15          | T_IF '(' STATEMENT ')' . '{' STUFF0 '}' T_ELSE '{' STUFF0 '}'

    '{'  shift, and go to state 50


state 41

    5 ASSIGNMENT_OPERATOR: T_INT T_VARIABLE '=' FACTOR .

    $default  reduce using rule 5 (ASSIGNMENT_OPERATOR)


state 42

   13 FACTOR: '(' NUMERICAL_EXPR ')' .

    $default  reduce using rule 13 (FACTOR)


state 43

    7 NUMERICAL_EXPR: NUMERICAL_EXPR T_PLUS TERM .
   10 TERM: TERM . T_STAR FACTOR
   11     | TERM . T_DIVIDE FACTOR

    T_STAR    shift, and go to state 35
    T_DIVIDE  shift, and go to state 36

    $default  reduce using rule 7 (NUMERICAL_EXPR)


state 44

    8 NUMERICAL_EXPR: NUMERICAL_EXPR T_MINUS TERM .
   10 TERM: TERM . T_STAR FACTOR
   11     | TERM . T_DIVIDE FACTOR

    T_STAR    shift, and go to state 35
    T_DIVIDE  shift, and go to state 36

    $default  reduce using rule 8 (NUMERICAL_EXPR)


state 45

   10 TERM: TERM T_STAR FACTOR .

    $default  reduce using rule 10 (TERM)


state 46

   11 TERM: TERM T_DIVIDE FACTOR .

    $default  reduce using rule 11 (TERM)


state 47

   16 ITTERATION: T_WHILE '(' STATEMENT ')' '{' . STUFF0 '}'

    T_VARIABLE  shift, and go to state 1
    T_WHILE     shift, and go to state 2
    T_IF        shift, and go to state 3
    T_INT       shift, and go to state 4

    VARIABLE_DECLERATION  go to state 6
    VARIABLE_TYPE         go to state 7
    ASSIGNMENT_OPERATOR   go to state 8
    SELECTION             go to state 9
    ITTERATION            go to state 10
    FUNCTION_CALL         go to state 11
    STUFF0                go to state 51


state 48

   17 STATEMENT: STATEMENT_SIDE T_EQ STATEMENT_SIDE .

    $default  reduce using rule 17 (STATEMENT)


state 49

   18 STATEMENT: STATEMENT_SIDE T_NEQ STATEMENT_SIDE .

    $default  reduce using rule 18 (STATEMENT)


state 50

   14 SELECTION: T_IF '(' STATEMENT ')' '{' . STUFF0 '}'
   15          | T_IF '(' STATEMENT ')' '{' . STUFF0 '}' T_ELSE '{' STUFF0 '}'

    T_VARIABLE  shift, and go to state 1
    T_WHILE     shift, and go to state 2
    T_IF        shift, and go to state 3
    T_INT       shift, and go to state 4

    VARIABLE_DECLERATION  go to state 6
    VARIABLE_TYPE         go to state 7
    ASSIGNMENT_OPERATOR   go to state 8
    SELECTION             go to state 9
    ITTERATION            go to state 10
    FUNCTION_CALL         go to state 11
    STUFF0                go to state 52


state 51

   16 ITTERATION: T_WHILE '(' STATEMENT ')' '{' STUFF0 . '}'

    '}'  shift, and go to state 53


state 52

   14 SELECTION: T_IF '(' STATEMENT ')' '{' STUFF0 . '}'
   15          | T_IF '(' STATEMENT ')' '{' STUFF0 . '}' T_ELSE '{' STUFF0 '}'

    '}'  shift, and go to state 54


state 53

   16 ITTERATION: T_WHILE '(' STATEMENT ')' '{' STUFF0 '}' .

    $default  reduce using rule 16 (ITTERATION)


state 54

   14 SELECTION: T_IF '(' STATEMENT ')' '{' STUFF0 '}' .
   15          | T_IF '(' STATEMENT ')' '{' STUFF0 '}' . T_ELSE '{' STUFF0 '}'

    T_ELSE  shift, and go to state 55

    $default  reduce using rule 14 (SELECTION)


state 55

   15 SELECTION: T_IF '(' STATEMENT ')' '{' STUFF0 '}' T_ELSE . '{' STUFF0 '}'

    '{'  shift, and go to state 56


state 56

   15 SELECTION: T_IF '(' STATEMENT ')' '{' STUFF0 '}' T_ELSE '{' . STUFF0 '}'

    T_VARIABLE  shift, and go to state 1
    T_WHILE     shift, and go to state 2
    T_IF        shift, and go to state 3
    T_INT       shift, and go to state 4

    VARIABLE_DECLERATION  go to state 6
    VARIABLE_TYPE         go to state 7
    ASSIGNMENT_OPERATOR   go to state 8
    SELECTION             go to state 9
    ITTERATION            go to state 10
    FUNCTION_CALL         go to state 11
    STUFF0                go to state 57


state 57

   15 SELECTION: T_IF '(' STATEMENT ')' '{' STUFF0 '}' T_ELSE '{' STUFF0 . '}'

    '}'  shift, and go to state 58


state 58

   15 SELECTION: T_IF '(' STATEMENT ')' '{' STUFF0 '}' T_ELSE '{' STUFF0 '}' .

    $default  reduce using rule 15 (SELECTION)
